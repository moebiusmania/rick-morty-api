{"version":3,"sources":["components/Search/index.js","utils/index.js","components/Card/index.js","components/List/index.js","utils/http.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","useState","name","setName","onSubmit","evt","preventDefault","search","toLocaleLowerCase","class","type","className","placeholder","aria-label","aria-describedby","onChange","target","value","statusBadge","status","classes","push","join","Card","item","data","src","image","alt","location","origin","species","gender","mock","count","pages","next","prev","List","URL","filter","pag","setPag","items","setItems","getData","endpoint","fetch","then","r","json","http","info","results","addFilter","str","concat","navigate","direction","useEffect","window","scrollTo","top","behavior","map","e","id","role","onClick","App","setFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0015a9d.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst Search = (props) => {\n  /**\n   * Component's data, props and state\n   */\n  const [name, setName] = useState('');\n\n  /**\n   * Pass data to parent component\n   */\n  const doSearch = (evt) => {\n    evt.preventDefault();\n    if (props.search) {\n      props.search(name.toLocaleLowerCase());\n    }\n  }\n\n  /**\n   * Template\n   */\n  return (\n    <form onSubmit={doSearch}>\n      <div class=\"input-group mb-3\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"Search a character by name\"\n          aria-label=\"Search a character by name\" aria-describedby=\"button-addon2\"\n          onChange={evt => setName(evt.target.value)} value={name} />\n        <button className=\"btn btn-outline-primary\" type=\"button\">Search</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Search;","const statusBadge = (status) => {\n  const classes = ['badge'];\n  switch (status) {\n    default:\n    case 'Alive':\n      classes.push('bg-success');\n      break;\n    case 'Dead':\n      classes.push('bg-danger');\n      break;\n    case 'unknown':\n      classes.push('bg-secondary');\n      break;\n  }\n  return classes.join(' ');\n}\n\nexport {\n  statusBadge\n}","\nimport { statusBadge } from './../../utils';\n\nconst Card = (props) => {\n  /**\n   * Component's data, props and state\n   */\n  const item = props.data || {};\n  \n  /**\n   * Template\n   */\n  return (\n    <div className=\"card\">\n      <img src={item.image} className=\"card-img-top\" alt={item.name} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{item.name}</h5>\n        <span className={statusBadge(item.status)}>{item.status}</span>\n        <p className=\"card-text\">\n          <ul class=\"list-unstyled\">\n            <li><strong>Location:</strong> {item.location.name}</li>\n            <li><strong>Origin:</strong> {item.origin.name}</li>\n            <li><strong>Species:</strong> {item.species}</li>\n            <li><strong>Gender:</strong> {item.gender}</li>\n          </ul>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","\nimport { useState, useEffect } from 'react';\n\nimport Card from './../Card';\nimport { http } from './../../utils/http';\n\nconst mock = {\n  pagination: {\n    count: 0,\n    pages: 0,\n    next: '',\n    prev: ''\n  }\n}\n\nconst List = (props) => {\n  /**\n   * Component's data, props and state\n   */\n  const URL = 'https://rickandmortyapi.com/api/character';\n  const filter = props.filter || '';\n\n  const [pag, setPag] = useState(mock.pagination);\n  const [items, setItems] = useState([]);\n\n  /**\n   * Internal utilities\n   */\n  const getData = (endpoint) => http(endpoint).then(data => {\n    setPag(data.info);\n    setItems(data.results);\n  });\n\n  const addFilter = (str, concat) => `${str}${concat ? '&' : '/?'}name=${filter}`;\n\n  const navigate = (direction) => direction === 'next' ?\n    getData(addFilter(pag.next, true)) : getData(addFilter(pag.prev, true));\n\n  /**\n   * Side Effects\n   */\n  useEffect(() => \n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  , [pag]);\n\n  useEffect(() => {\n    getData(addFilter(URL));\n    // eslint-disable-next-line\n  }, [filter]);\n\n  useEffect(() => {\n    getData(URL);\n  }, []);\n\n  /**\n   * Template\n   */\n  return (\n    <>\n      <ul className=\"list-unstyled cards\">\n        {items.map(e => <li key={e.id}><Card data={e} /></li>)}\n      </ul>\n      \n      <div className=\"btn-group navigation\" role=\"navigation\" aria-label=\"navigation\">\n        {pag.prev ? \n          <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => navigate('prev')}>&laquo; Prev</button> \n        : null }\n\n        {pag.next ? \n          <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => navigate('next')}>Next &raquo;</button> \n        : null }\n      </div>\n\n      <p>Total: <strong>{pag.count}</strong> items in <strong>{pag.pages}</strong> pages</p>\n    </>\n  )\n}\n\nexport default List;","\nconst http = (url = '', params = {}) => \n  fetch(url, params).then(r => r.json()); \n\nexport {\n  http\n}","import { useState } from 'react';\n\nimport './App.scss';\n\nimport Search from './components/Search';\nimport List from './components/List';\n\nfunction App() {\n  /**\n   * Component's data, props and state\n   */\n  const [filter, setFilter] = useState('');\n\n  /**\n   * Get data from <Search /> and set to internal state\n   */\n  const doSearch = (str) => {\n    setFilter(str);\n  }\n\n  /**\n   * Template\n   */\n  return (\n    <div className=\"container app\">\n      <h1>Rick & Morty API homework</h1>\n\n      <Search search={doSearch} />\n      <List filter={filter} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}